{"version":3,"sources":["webpack:///src/app/pages/temp1/temp1.page.html","webpack:///src/app/pages/temp1/termination-process/DetailsModal.html","webpack:///src/app/pages/temp1/termination-process/termination-process.component.html","webpack:///src/app/pages/temp1/termination-request/ApprovalModal.html","webpack:///src/app/pages/temp1/termination-request/termination-request.component.html","webpack:///src/app/pages/temp1/termination-steps/add-new-step.html","webpack:///src/app/pages/temp1/termination-steps/termination-steps.component.html","webpack:///src/app/pages/temp1/temp1-routing.module.ts","webpack:///src/app/pages/temp1/temp1.module.ts","webpack:///src/app/pages/temp1/temp1.page.scss","webpack:///src/app/pages/temp1/temp1.page.ts","webpack:///src/app/pages/temp1/termination-process/termination-process.component.scss","webpack:///src/app/pages/temp1/termination-process/termination-process.component.ts","webpack:///src/app/pages/temp1/termination-request/termination-request.component.scss","webpack:///src/app/pages/temp1/termination-request/termination-request.component.ts","webpack:///src/app/pages/temp1/termination-steps/termination-steps.component.scss","webpack:///src/app/pages/temp1/termination-steps/termination-steps.component.ts"],"names":["routes","path","component","Temp1PageRoutingModule","imports","forChild","exports","Temp1PageModule","declarations","Temp1Page","$event","tabIndex","index","selector","template","TerminationProcessComponent","dialog","appService","displayedColumns","dataSource","employees","allStepDetails","createTable","changes","getApprovedEmployees","subscribe","getStepDetails","stepDetails","data","paginator","event","filterValue","target","value","filter","trim","toLowerCase","empID","initiateTerminationProcess","checked","row","getTerminationProcessDetails","result","forEach","step","stepID","length","includes","select","activity","completedBy","dept","initiate","dialogRef","open","DetailsModal","width","steps","afterClosed","selectedSteps","empName","status","SUPER","close","push","item","Date","getMonth","getDate","getFullYear","getHours","getMinutes","saveTerminationProcessDetails","completeTerminationProcessDetails","TerminationRequestComponent","requestedEmployees","getRequestedEmployees","ApprovalModal","empData","approveRequestDetails","denyRequestDetails","TerminationStepsComponent","getAllStepDetails","stepDetils","stepDetailsList","saveStepStatus","AddNewStepModal","newstep","active","stepDesc","addNewStep"],"mappings":"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","file":"pages-temp1-temp1-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <mat-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Admin View</ion-title>\\r\\n  </mat-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <mat-card class=\\\"card\\\">\\r\\n    <mat-card-title>\\r\\n    <h2>Admin Dashboard </h2>\\r\\n</mat-card-title>\\r\\n\\r\\n    <mat-card-content>\\r\\n\\r\\n      <mat-tab-group (selectedTabChange)=\\\"tabChange($event)\\\">\\r\\n        <mat-tab label=\\\"Termination Request\\\"> <app-termination-request></app-termination-request> </mat-tab>\\r\\n        <mat-tab label=\\\"Termination Process\\\"><app-termination-process [index]=\\\"tabIndex\\\"></app-termination-process> </mat-tab>\\r\\n        <mat-tab label=\\\"Termination Steps\\\"> <app-termination-steps></app-termination-steps> </mat-tab>\\r\\n      </mat-tab-group>\\r\\n\\r\\n  </mat-card-content>\\r\\n  </mat-card>\\r\\n</ion-content>\\r\\n\";","export default \"<style>\\r\\n  table {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .mat-form-field {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .set-left {\\r\\n    float: right;\\r\\n  }\\r\\n</style>\\r\\n<mat-dialog-content>\\r\\n  <mat-card>\\r\\n    <mat-card-title>\\r\\n      <span>Termination Process: {{empName}}</span><button mat-raised-button class=\\\"set-left\\\"\\r\\n        (click)=\\\"NothanksClick()\\\">X</button>\\r\\n    </mat-card-title>\\r\\n    <mat-card-subtitle>\\r\\n      Badge ID - {{empID}}\\r\\n    </mat-card-subtitle>\\r\\n    <mat-card-content>\\r\\n\\r\\n      <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n        \\r\\n        <!-- Checkbox Column -->\\r\\n        <ng-container matColumnDef=\\\"select\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>\\r\\n            <!-- <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\" [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\r\\n              [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\" [aria-label]=\\\"checkboxLabel()\\\">\\r\\n            </mat-checkbox> -->\\r\\n          </th>\\r\\n          <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n            <mat-checkbox (click)=\\\"$event.stopPropagation()\\\" (change)=\\\"onCheck($event, row)\\\"\\r\\n              [checked]=\\\"row.select\\\" [disabled]=\\\"row.select\\\"\\r\\n            >\\r\\n            </mat-checkbox>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"stepDesc\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>Step Desc</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n            {{element.stepDesc}}\\r\\n          </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"activity\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>Completed Date</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n            {{element.activity}}\\r\\n          </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"completedBy\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>Completed By</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n            {{element.completedBy}}\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n      </table>\\r\\n\\r\\n      <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n    </mat-card-content>\\r\\n    <mat-card-actions align=\\\"center\\\">\\r\\n      <button mat-raised-button color=\\\"primary\\\"\\r\\n        (click)=\\\"onSubmit()\\\">Submit</button>\\r\\n        <button mat-raised-button color=\\\"warn\\\"\\r\\n        (click)=\\\"onComplete()\\\">Sign Off</button>\\r\\n\\r\\n    </mat-card-actions>\\r\\n  </mat-card>\\r\\n</mat-dialog-content>\";","export default \"<mat-card class=\\\"card\\\">\\r\\n  <mat-card-title>\\r\\n    <h2> </h2>\\r\\n  </mat-card-title>\\r\\n\\r\\n  <mat-card-content>\\r\\n    <mat-form-field>\\r\\n      <mat-label>Search Employee</mat-label>\\r\\n      <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"Search\\\">\\r\\n    </mat-form-field>\\r\\n    <div class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n      <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n\\r\\n        <ng-container matColumnDef=\\\"initiate\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>Initiate</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n            <mat-slide-toggle class=\\\"example-margin\\\" [checked]=\\\"element.initiate\\\" [disabled]=\\\"element.initiate\\\"\\r\\n              (change)=\\\"initiateProcess(element.empID,$event)\\\"></mat-slide-toggle>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"empName\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.empName}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"empID\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Badge ID </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.empID}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"empJobTitle\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>Job Title </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.empJobTitle}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"empReportsTo\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Reports To </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.empReportsTo}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"empEndDate\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> End Date </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.empEndDate}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"reason\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Termination Reason </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.reason}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"status\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>Status </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n            <mat-chip-list>\\r\\n              <mat-chip color={{element.SUPER.color}} selected>{{element.SUPER.status}}</mat-chip>\\r\\n            </mat-chip-list>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"selectRow(row)\\\"></tr>\\r\\n      </table>\\r\\n\\r\\n      <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n    </div>\\r\\n  </mat-card-content>\\r\\n</mat-card>\";","export default \"<mat-dialog-content>\\r\\n    <mat-card>\\r\\n        <h2 align=\\\"center\\\">Termination Request</h2>\\r\\n      \\r\\n        <h4>Employee: {{empData.empName}}</h4>\\r\\n      \\r\\n      <mat-card-subtitle>\\r\\n        <p>Badge ID - {{empData.empID}}</p>\\r\\n        <p>Reason - {{empData.reason}}</p>\\r\\n      </mat-card-subtitle>\\r\\n      <mat-card-actions align=\\\"center\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\"\\r\\n          (click)=\\\"onApprove()\\\">Approve</button>\\r\\n          <button mat-raised-button color=\\\"warn\\\"\\r\\n          (click)=\\\"onDeny()\\\">Decline</button>\\r\\n          <button mat-raised-button color=\\\"secondary\\\"\\r\\n          (click)=\\\"NothanksClick()\\\">Cancel</button>\\r\\n  \\r\\n      </mat-card-actions>\\r\\n</mat-card>\\r\\n</mat-dialog-content>\";","export default \"<mat-card class=\\\"card\\\">\\r\\n  <mat-card-title>\\r\\n  <h2>Termination Requests</h2>\\r\\n</mat-card-title>\\r\\n\\r\\n  <mat-card-content>\\r\\n<mat-form-field>\\r\\n        <mat-label>Search Employee</mat-label>\\r\\n        <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"Search\\\">\\r\\n      </mat-form-field>\\r\\n  \\r\\n  <div class=\\\"mat-elevation-z8\\\">\\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n\\r\\n      <ng-container matColumnDef=\\\"empName\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.empName}} </td>\\r\\n      </ng-container>\\r\\n  \\r\\n      <ng-container matColumnDef=\\\"empID\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Badge ID </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.empID}} </td>\\r\\n      </ng-container>\\r\\n  \\r\\n      <ng-container matColumnDef=\\\"empReportsTo\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Reports To </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.empReportsTo}} </td>\\r\\n      </ng-container>\\r\\n  \\r\\n      <ng-container matColumnDef=\\\"empEndDate\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> End Date </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.empEndDate}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"reason\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Termination Reason </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.reason}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"status\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>Status </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"><mat-chip-list>\\r\\n          <mat-chip *ngIf=\\\"element.approved === 'approved'\\\" color=\\\"primary\\\" selected>Approved</mat-chip>\\r\\n          <mat-chip *ngIf=\\\"element.approved === 'declined'\\\" color=\\\"warn\\\" selected>Declined</mat-chip>\\r\\n          <mat-chip *ngIf=\\\"element.approved === 'requested'\\\" color=\\\"black\\\" selected>Requested</mat-chip>\\r\\n        </mat-chip-list>  </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"selectRow(row)\\\"></tr>\\r\\n    </table>\\r\\n  \\r\\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n  </div> \\r\\n\\r\\n</mat-card-content>\\r\\n</mat-card>\";","export default \"<style>\\r\\n    .example-button-row button {\\r\\n      display: table-cell;\\r\\n      margin-right: 8px;\\r\\n    }\\r\\n    .mat-card  {\\r\\n      box-shadow: none;\\r\\n    }\\r\\n    .mat-form-field {\\r\\n      width: 100%;\\r\\n    }\\r\\n        </style>\\r\\n    <mat-dialog-content>\\r\\n        <mat-card>\\r\\n    \\r\\n           <h3>Add a New Step</h3>\\r\\n    \\r\\n            <mat-card-content>\\r\\n                <mat-form-field>\\r\\n                  <mat-label> Step Description</mat-label>\\r\\n                  <input matInput [formControl]=\\\"newstep\\\">\\r\\n                </mat-form-field>\\r\\n                <br>\\r\\n                <mat-form-field>\\r\\n                    <mat-label>Department</mat-label>\\r\\n                    <mat-select [formControl]=\\\"dept\\\">\\r\\n                      <mat-option value=\\\"HR\\\">HR</mat-option>\\r\\n                      <mat-option value=\\\"IT\\\">IT</mat-option>\\r\\n                    </mat-select>\\r\\n                  </mat-form-field>\\r\\n                  <br>\\r\\n                    <mat-checkbox [(ngModel)]=\\\"active\\\">Active</mat-checkbox>\\r\\n                    <br>\\r\\n                    <br>\\r\\n\\r\\n    \\r\\n                <div class=\\\"example-button-row\\\">\\r\\n                    <button mat-raised-button (click)=\\\"saveNewStep()\\\" color=\\\"primary\\\">Save</button>\\r\\n                  <button mat-raised-button (click)=\\\"NothanksClick()\\\">Cancel</button>\\r\\n                </div>\\r\\n    \\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    </mat-dialog-content>\\r\\n    \";","export default \"<style>\\r\\n  table {\\r\\n    width: 100%;\\r\\n  }\\r\\n  .mat-form-field {\\r\\n    width: 80%;\\r\\n  }\\r\\n  .button {\\r\\n    float: right;\\r\\n  }\\r\\n\\r\\n</style>\\r\\n    <mat-card class=\\\"card\\\">\\r\\n        <mat-card-title>\\r\\n            <span>Termination Steps</span>\\r\\n        </mat-card-title>\\r\\n        <mat-card-content>\\r\\n\\r\\n          <mat-form-field>\\r\\n            <mat-label>Search Step</mat-label>\\r\\n            <input matInput (keyup)=\\\"applyFilter($event)\\\">\\r\\n          </mat-form-field>\\r\\n            <button mat-mini-fab color=\\\"primary\\\" class=\\\"button\\\" (click)=\\\"addNewStep()\\\">\\r\\n           <mat-icon>add</mat-icon>\\r\\n         </button>\\r\\n    \\r\\n        \\r\\n\\r\\n          <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n            <ng-container matColumnDef=\\\"stepDesc\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef>Termination Steps</th>\\r\\n              <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                {{element.stepDesc}}\\r\\n               </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"dept\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef>Department</th>\\r\\n              <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                {{element.dept}}\\r\\n               </td>\\r\\n            </ng-container>\\r\\n\\r\\n\\r\\n            <ng-container matColumnDef=\\\"active\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef>Active</th>\\r\\n              <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                <mat-slide-toggle class=\\\"example-margin\\\" [checked]=\\\"element.active\\\" (change)=\\\"saveStepStatus(element.stepID,$event)\\\"></mat-slide-toggle>\\r\\n              </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n          </table>\\r\\n\\r\\n          <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { Temp1Page } from './temp1.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Temp1Page\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class Temp1PageRoutingModule {}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { Temp1PageRoutingModule } from './temp1-routing.module';\r\nimport { Temp1Page } from './temp1.page';\r\nimport { TerminationProcessComponent, DetailsModal } from './termination-process/termination-process.component';\r\nimport { TerminationRequestComponent, ApprovalModal } from './termination-request/termination-request.component';\r\nimport { TerminationStepsComponent, AddNewStepModal } from './termination-steps/termination-steps.component';\r\nimport { SharedModuleModule } from 'src/app/shared-module/shared-module.module';\r\n\r\n\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IonicModule,\r\n    Temp1PageRoutingModule,\r\n    SharedModuleModule,\r\n  ],\r\n  declarations: [Temp1Page,\r\n    DetailsModal,\r\n    ApprovalModal,\r\n    AddNewStepModal,\r\n    TerminationProcessComponent,\r\n    TerminationRequestComponent,\r\n    TerminationStepsComponent]\r\n})\r\nexport class Temp1PageModule {}\r\n","export default \"table {\\n  width: 100%;\\n}\\n\\n.card {\\n  margin: 12px;\\n  text-align: left;\\n  font-family: Helvetica;\\n  padding: 30px;\\n}\\n\\n.login-section {\\n  display: flex;\\n  align-content: center;\\n  align-items: center;\\n  height: 60px;\\n}\\n\\n.login-margin {\\n  margin: 0 10px;\\n}\\n\\ntr.mat-row {\\n  cursor: pointer;\\n}\\n\\n.mat-form-field {\\n  width: 50%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvdGVtcDEvQzpcXFVzZXJzXFxsc2V0aHVyYW1hblxcTGF2YW55YVxcV29ya2FyZWFcXFRlcm1pbmF0aW9uVGVtcGxhdGUvc3JjXFxhcHBcXHBhZ2VzXFx0ZW1wMVxcdGVtcDEucGFnZS5zY3NzIiwic3JjL2FwcC9wYWdlcy90ZW1wMS90ZW1wMS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFBO0FDQ0Y7O0FEQ0E7RUFDRSxZQUFBO0VBQ0EsZ0JBQUE7RUFDQSxzQkFBQTtFQUNBLGFBQUE7QUNFRjs7QURBQTtFQUNFLGFBQUE7RUFDQSxxQkFBQTtFQUNBLG1CQUFBO0VBQ0EsWUFBQTtBQ0dGOztBREFBO0VBQ0UsY0FBQTtBQ0dGOztBRERBO0VBQ0UsZUFBQTtBQ0lGOztBREZBO0VBQ0UsVUFBQTtBQ0tGIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvdGVtcDEvdGVtcDEucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbi5jYXJkIHtcclxuICBtYXJnaW46IDEycHg7XHJcbiAgdGV4dC1hbGlnbjogbGVmdDtcclxuICBmb250LWZhbWlseTogSGVsdmV0aWNhO1xyXG4gIHBhZGRpbmc6IDMwcHg7XHJcbn1cclxuLmxvZ2luLXNlY3Rpb24ge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24tY29udGVudDogY2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgaGVpZ2h0OiA2MHB4O1xyXG59XHJcblxyXG4ubG9naW4tbWFyZ2luIHtcclxuICBtYXJnaW46IDAgMTBweDtcclxufVxyXG50ci5tYXQtcm93IHtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuLm1hdC1mb3JtLWZpZWxkIHtcclxuICB3aWR0aDogNTAlO1xyXG59IiwidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmNhcmQge1xuICBtYXJnaW46IDEycHg7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIGZvbnQtZmFtaWx5OiBIZWx2ZXRpY2E7XG4gIHBhZGRpbmc6IDMwcHg7XG59XG5cbi5sb2dpbi1zZWN0aW9uIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24tY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBoZWlnaHQ6IDYwcHg7XG59XG5cbi5sb2dpbi1tYXJnaW4ge1xuICBtYXJnaW46IDAgMTBweDtcbn1cblxudHIubWF0LXJvdyB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLm1hdC1mb3JtLWZpZWxkIHtcbiAgd2lkdGg6IDUwJTtcbn0iXX0= */\";","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-temp1',\r\n  templateUrl: './temp1.page.html',\r\n  styleUrls: ['./temp1.page.scss'],\r\n})\r\nexport class Temp1Page implements OnInit {\r\n  tabIndex: number;\r\n  constructor() { }\r\n  ngOnInit() { }\r\n  tabChange($event) {\r\n    this.tabIndex = $event.index;\r\n  }\r\n}\r\n\r\n\r\n","export default \"table {\\n  width: 100%;\\n}\\n\\n.login-section {\\n  display: flex;\\n  align-content: center;\\n  align-items: center;\\n  height: 60px;\\n}\\n\\n.login-margin {\\n  margin: 0 10px;\\n}\\n\\ntr.mat-row {\\n  cursor: pointer;\\n}\\n\\n.mat-form-field {\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvdGVtcDEvdGVybWluYXRpb24tcHJvY2Vzcy9DOlxcVXNlcnNcXGxzZXRodXJhbWFuXFxMYXZhbnlhXFxXb3JrYXJlYVxcVGVybWluYXRpb25UZW1wbGF0ZS9zcmNcXGFwcFxccGFnZXNcXHRlbXAxXFx0ZXJtaW5hdGlvbi1wcm9jZXNzXFx0ZXJtaW5hdGlvbi1wcm9jZXNzLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9wYWdlcy90ZW1wMS90ZXJtaW5hdGlvbi1wcm9jZXNzL3Rlcm1pbmF0aW9uLXByb2Nlc3MuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxXQUFBO0FDQ0o7O0FERUU7RUFDRSxhQUFBO0VBQ0EscUJBQUE7RUFDQSxtQkFBQTtFQUNBLFlBQUE7QUNDSjs7QURFRTtFQUNFLGNBQUE7QUNDSjs7QURDRTtFQUNFLGVBQUE7QUNFSjs7QURBRTtFQUNFLFdBQUE7QUNHSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3RlbXAxL3Rlcm1pbmF0aW9uLXByb2Nlc3MvdGVybWluYXRpb24tcHJvY2Vzcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxuICBcclxuICAubG9naW4tc2VjdGlvbiB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24tY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGhlaWdodDogNjBweDtcclxuICB9XHJcbiAgXHJcbiAgLmxvZ2luLW1hcmdpbiB7XHJcbiAgICBtYXJnaW46IDAgMTBweDtcclxuICB9XHJcbiAgdHIubWF0LXJvdyB7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgfVxyXG4gIC5tYXQtZm9ybS1maWVsZCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9IiwidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmxvZ2luLXNlY3Rpb24ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGhlaWdodDogNjBweDtcbn1cblxuLmxvZ2luLW1hcmdpbiB7XG4gIG1hcmdpbjogMCAxMHB4O1xufVxuXG50ci5tYXQtcm93IHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4ubWF0LWZvcm0tZmllbGQge1xuICB3aWR0aDogMTAwJTtcbn0iXX0= */\";","import { Component, OnInit, ViewChild, Inject, Input,OnChanges, SimpleChanges } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { EmployeeDetails } from '../../../table-data';\r\nimport { AppService } from 'src/app/app.service';\r\nimport * as lod from 'lodash';\r\n\r\n\r\n@Component({\r\n  selector: 'app-termination-process',\r\n  templateUrl: './termination-process.component.html',\r\n  styleUrls: ['./termination-process.component.scss'],\r\n})\r\nexport class TerminationProcessComponent implements OnInit, OnChanges {\r\n  @Input('index') index: number;\r\n\r\n  displayedColumns: string[] = ['initiate','empName', 'empID', 'empJobTitle', 'empReportsTo', 'empEndDate','reason', 'status'];\r\n  dataSource = new MatTableDataSource<EmployeeDetails>();\r\n  employees = [];\r\n  allStepDetails: Array<any> = [];\r\n  \r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  constructor(public dialog: MatDialog, private appService: AppService) { }\r\n\r\n  ngOnInit() {\r\n    this.createTable();\r\n  }\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this.createTable();  \r\n  }\r\n\r\n  createTable() {\r\n    this.appService.getApprovedEmployees().subscribe(employees => this.employees = employees);\r\n    this.appService.getStepDetails().subscribe(stepDetails => this.allStepDetails = stepDetails);\r\n\r\n    this.dataSource.data = this.employees;\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  initiateProcess(empID, event) {\r\n    this.appService.initiateTerminationProcess(empID, event.checked);\r\n  }\r\n\r\n\r\n  selectRow(row) {\r\n    this.appService.getTerminationProcessDetails(row.empID).subscribe(result => {\r\n      this.allStepDetails.forEach(step => {\r\n        if (result.stepID.length !== 0 && result.stepID.includes(step.stepID)) {\r\n          step.select = true;\r\n          step.activity = result.activity;\r\n          step.completedBy = step.dept;\r\n        } else {\r\n          step.select = false;\r\n          step.activity = '';\r\n          step.completedBy = '';\r\n        }\r\n      });\r\n    });\r\n    if (this.employees[lod.findIndex(this.employees, ['empID', row.empID])].initiate) {\r\n      let dialogRef = this.dialog.open(DetailsModal, {\r\n      width: '600px',\r\n      data: { row: row, steps: this.allStepDetails }\r\n      });\r\n      dialogRef.afterClosed().subscribe(() => this.createTable());\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'details-modal',\r\n  templateUrl: './DetailsModal.html',\r\n})\r\nexport class DetailsModal {\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n\r\n  displayedColumns: string[] = ['select', 'stepDesc', 'activity', 'completedBy'];\r\n  dataSource = new MatTableDataSource<any>();\r\n\r\n  empName: string;\r\n  empID: number;\r\n  stepDetails: [];\r\n  selectedSteps = [];\r\n  status: string;\r\n  constructor(\r\n    private appService: AppService,\r\n    public dialogRef: MatDialogRef<DetailsModal>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) {\r\n    this.empName = this.data.row.empName;\r\n    this.empID = this.data.row.empID;\r\n    this.stepDetails = this.data.steps;\r\n    this.status = this.data.row.SUPER.status;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataSource.data = this.stepDetails;\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  NothanksClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n\r\n  onCheck(event, row) {\r\n    if (event.checked) {\r\n      this.selectedSteps.push(row.stepID)\r\n    } else {\r\n      this.selectedSteps = this.selectedSteps.filter(item => item !== row.stepID);\r\n    }\r\n  }\r\n  onSubmit() {\r\n    let data = {\r\n      empID: this.empID,\r\n      empName: this.empName,\r\n      stepID: this.selectedSteps,\r\n      completedBy: '',\r\n      activity: (new Date().getMonth() + 1) + '/' + new Date().getDate() + '/' + new Date().getFullYear() + ' ' + new Date().getHours() + ':' + new Date().getMinutes()\r\n    };\r\n    this.appService.saveTerminationProcessDetails(data);\r\n    this.dialogRef.close();\r\n  }\r\n  onComplete() {\r\n    this.appService.completeTerminationProcessDetails(this.empID);\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","export default \"table {\\n  width: 100%;\\n}\\n\\nmat-form-field {\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvdGVtcDEvdGVybWluYXRpb24tcmVxdWVzdC9DOlxcVXNlcnNcXGxzZXRodXJhbWFuXFxMYXZhbnlhXFxXb3JrYXJlYVxcVGVybWluYXRpb25UZW1wbGF0ZS9zcmNcXGFwcFxccGFnZXNcXHRlbXAxXFx0ZXJtaW5hdGlvbi1yZXF1ZXN0XFx0ZXJtaW5hdGlvbi1yZXF1ZXN0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9wYWdlcy90ZW1wMS90ZXJtaW5hdGlvbi1yZXF1ZXN0L3Rlcm1pbmF0aW9uLXJlcXVlc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFBO0FDQ0Y7O0FEQ0E7RUFDRSxXQUFBO0FDRUYiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy90ZW1wMS90ZXJtaW5hdGlvbi1yZXF1ZXN0L3Rlcm1pbmF0aW9uLXJlcXVlc3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxubWF0LWZvcm0tZmllbGQge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbiIsInRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbm1hdC1mb3JtLWZpZWxkIHtcbiAgd2lkdGg6IDEwMCU7XG59Il19 */\";","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { RequestEmpData } from 'src/app/table-data';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n\r\n@Component({\r\n  selector: 'app-termination-request',\r\n  templateUrl: './termination-request.component.html',\r\n  styleUrls: ['./termination-request.component.scss'],\r\n})\r\nexport class TerminationRequestComponent implements OnInit {\r\n  requestedEmployees: RequestEmpData[] = [];\r\n  displayedColumns: string[] = ['empName', 'empID', 'empReportsTo', 'empEndDate','reason', 'status'];\r\n  dataSource = new MatTableDataSource<RequestEmpData>();\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n\r\n  constructor(public appService: AppService, public dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n    this.createTable();\r\n  }\r\n  createTable() {\r\n    this.appService.getRequestedEmployees().subscribe(employees => {\r\n      this.requestedEmployees = employees;\r\n    });\r\n    this.dataSource.data = this.requestedEmployees;\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  selectRow(row) {\r\n    let dialogRef = this.dialog.open(ApprovalModal, {\r\n      width: '400px',\r\n      data: row\r\n    });\r\n    dialogRef.afterClosed().subscribe(() => this.createTable());\r\n  }\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'approval-modal',\r\n  templateUrl: './ApprovalModal.html',\r\n})\r\nexport class ApprovalModal {\r\n\r\n  empData;\r\n  constructor(\r\n    private appService: AppService,\r\n    public dialogRef: MatDialogRef<ApprovalModal>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) {\r\n    this.empData = this.data;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  NothanksClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onApprove() {\r\n    this.appService.approveRequestDetails(this.empData);\r\n    this.dialogRef.close();\r\n  }\r\n  onDeny() {\r\n    this.appService.denyRequestDetails(this.empData);\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","export default \"mat-form-field {\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvdGVtcDEvdGVybWluYXRpb24tc3RlcHMvQzpcXFVzZXJzXFxsc2V0aHVyYW1hblxcTGF2YW55YVxcV29ya2FyZWFcXFRlcm1pbmF0aW9uVGVtcGxhdGUvc3JjXFxhcHBcXHBhZ2VzXFx0ZW1wMVxcdGVybWluYXRpb24tc3RlcHNcXHRlcm1pbmF0aW9uLXN0ZXBzLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9wYWdlcy90ZW1wMS90ZXJtaW5hdGlvbi1zdGVwcy90ZXJtaW5hdGlvbi1zdGVwcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFdBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3RlbXAxL3Rlcm1pbmF0aW9uLXN0ZXBzL3Rlcm1pbmF0aW9uLXN0ZXBzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfSIsIm1hdC1mb3JtLWZpZWxkIHtcbiAgd2lkdGg6IDEwMCU7XG59Il19 */\";","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport {FormControl, FormBuilder, FormGroup} from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-termination-steps',\r\n  templateUrl: './termination-steps.component.html',\r\n  styleUrls: ['./termination-steps.component.scss'],\r\n})\r\nexport class TerminationStepsComponent implements OnInit {\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n\r\n  displayedColumns: string[] = ['stepDesc', 'dept', 'active'];\r\n  dataSource = new MatTableDataSource();\r\n\r\n  stepDetailsList: any;\r\n  searchText: any;\r\n  questionId: any;\r\n  constructor(private appService: AppService, public dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n    this.createTable();\r\n  }\r\n  createTable() {\r\n    this.appService.getAllStepDetails().subscribe((stepDetils: any) => this.stepDetailsList = stepDetils);\r\n    this.dataSource.data = this.stepDetailsList;\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  saveStepStatus(stepID, status) {\r\n    let data = {\r\n      stepID: stepID,\r\n      status: status.checked\r\n    };\r\n    this.appService.saveStepStatus(data);\r\n  }\r\n  addNewStep() {\r\n    let dialogRef = this.dialog.open(AddNewStepModal, {\r\n      width: '400px'\r\n    });\r\n    dialogRef.afterClosed().subscribe(() => this.createTable());\r\n  }\r\n}\r\n  \r\n  @Component({\r\n    selector: 'add-new-step-modal',\r\n    templateUrl: './add-new-step.html',\r\n  })\r\nexport class AddNewStepModal {\r\n  newstep = new FormControl();\r\n  dept= new FormControl();\r\n  active: boolean = false;\r\n  constructor(private appService: AppService,public dialogRef: MatDialogRef<AddNewStepModal>) { }\r\n\r\n  NothanksClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n    saveNewStep() {\r\n      let data = {\r\n        stepDesc: this.newstep.value,\r\n        select: false,\r\n        dept: this.dept.value,\r\n        active: this.active\r\n      };\r\n      this.appService.addNewStep(data);\r\n      this.dialogRef.close();\r\n  }\r\n}\r\n"]}